package com.androidphotoapp.sleepengine

import android.content.Intent
import android.os.Bundle
import android.widget.Toast
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.*
import androidx.compose.material3.Button
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import com.androidphotoapp.sleepengine.receiver.ScreenReceiver
import com.androidphotoapp.sleepengine.ui.theme.SleepEngineTheme

class MainActivity : ComponentActivity() {

  override fun onCreate(savedInstanceState: Bundle?) {
    super.onCreate(savedInstanceState)
    enableEdgeToEdge()
    setContent {
      SleepEngineTheme {
        Scaffold(modifier = Modifier.fillMaxSize()) { innerPadding ->
          TestScreenButtons(
            modifier = Modifier.padding(innerPadding),
            activity = this // pass context directly
          )
        }
      }
    }
  }

  fun triggerScreenReceiver(action: String) {
    val receiver = ScreenReceiver()
    val intent = Intent(action)
    receiver.onReceive(this, intent)
    Toast.makeText(this, "Triggered: $action", Toast.LENGTH_SHORT).show()
  }
}

@Composable
fun TestScreenButtons(modifier: Modifier = Modifier, activity: MainActivity) {
  Column(
    modifier = modifier
      .fillMaxSize()
      .padding(16.dp),
    verticalArrangement = Arrangement.spacedBy(16.dp)
  ) {
    Button(onClick = {
      // Simulate screen lock
      activity.triggerScreenReceiver(Intent.ACTION_SCREEN_OFF)
    }) {
      Text(text = "Screen Lock")
    }

    Button(onClick = {
      // Simulate screen unlock
      activity.triggerScreenReceiver(Intent.ACTION_SCREEN_ON)
    }) {
      Text(text = "Screen Unlock")
    }
  }
}
